/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3    &kp N4    &kp N5                          &kp N6  &kp N7    &kp N8     &kp N9   &kp N0    &kp GRAVE
&kp TAB    &kp Q   &kp W   &kp E     &kp R     &kp T                           &kp Y   &kp U     &kp I      &kp O    &kp P     &kp DEL
&kp LSHFT  &kp A   &kp S   &kp D     &kp F     &kp G                           &kp H   &kp J     &kp K      &kp L    &kp SEMI  &kp RSHFT
&kp LCTRL  &kp Z   &kp X   &kp C     &kp V     &kp B   &kp PG_DN    &kp PG_UP  &kp N   &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                           &kp LALT  &kp LGUI  &mo 1   &kp BSPC     &kp SPACE  &mo 2   &kp RGUI  &kp RALT
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans      &trans            &trans              &trans              &trans              &trans                       &trans          &trans  &kp KP_DIVIDE  &kp KP_ASTERISK  &kp KP_SUBTRACT  &trans
&trans      &kp F2            &kp LS(LA(LC(N7)))  &kp LS(LA(LC(N8)))  &kp LS(LA(LC(N9)))  &trans                       &kp KP_NUMLOCK  &kp N7  &kp N8         &kp N9           &kp KP_PLUS      &trans
&caps_word  &kp ESC           &kp LS(LA(LC(N4)))  &kp LS(LA(LC(N5)))  &kp LS(LA(LC(N6)))  &trans                       &trans          &kp N4  &kp N5         &kp N6           &kp KP_COMMA     &trans
&trans      &ext_power EP_ON  &kp LS(LA(LC(N1)))  &kp LC(LA(LS(N2)))  &kp LC(LS(LA(N3)))  &trans  &kp END    &kp HOME  &trans          &kp N1  &kp N2         &kp N3           &kp KP_ENTER     &trans
                                                  &trans              &trans              &trans  &trans     &trans    &kp N0          &trans  &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &trans         &trans         &trans         &trans        &trans                          &trans         &trans        &trans        &trans        &trans        &trans
&trans  &kp LS(EXCL)   &kp LS(AT)     &kp LS(POUND)  &kp LS(DLLR)  &kp LS(DLLR)                    &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp BSLH      &kp LS(PIPE)  &trans
&trans  &kp LS(TILDE)  &kp LS(UNDER)  &kp MINUS      &kp MINUS     &kp EQUAL                       &kp LEFT       &kp DOWN      &kp UP        &kp RIGHT     &kp GRAVE     &trans
&kp F7  &kp LBKT       &kp LS(LBRC)   &kp LS(LPAR)   &kp LS(DQT)   &kp LS(LT)    &trans    &trans  &kp LS(GT)     &kp SQT       &kp LS(RPAR)  &kp LS(RBRC)  &kp RBKT      &trans
                                      &trans         &trans        &mo 3         &trans    &trans  &trans         &trans        &trans
            >;
        };

        super_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans  &trans  &trans  &trans   &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans  &kp F7  &kp F8  &kp F9  &kp F12  &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &kp F1  &kp F2  &kp F3  &kp F10  &trans
                                        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
